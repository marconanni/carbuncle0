//
// Generated by JTB 1.3.2
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * All void visitors must implement this interface.
 */

public interface Visitor {

   //
   // void Auto class visitors
   //

   public void visit(NodeList n);
   public void visit(NodeListOptional n);
   public void visit(NodeOptional n);
   public void visit(NodeSequence n);
   public void visit(NodeToken n);

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> "CaTraSca"
    * f1 -> "{"
    * f2 -> [ Continue() ]
    * f3 -> Magazzino()
    * f4 -> ";"
    * f5 -> ( DescrizionePeriodo() )+
    * f6 -> "}"
    */
   public void visit(Scope n);

   /**
    * f0 -> "CONTINUE"
    * f1 -> "="
    * f2 -> <BOOL>
    */
   public void visit(Continue n);

   /**
    * f0 -> "MAGAZZINO"
    * f1 -> NomeComposto()
    * f2 -> [ Indirizzo() ]
    */
   public void visit(Magazzino n);

   /**
    * f0 -> ","
    * f1 -> "VIA"
    * f2 -> NomeComposto()
    * f3 -> [ NumeroCivico() ]
    * f4 -> ","
    * f5 -> <NUM>
    * f6 -> NomeComposto()
    */
   public void visit(Indirizzo n);

   /**
    * f0 -> ", N."
    * f1 -> <NUM>
    */
   public void visit(NumeroCivico n);

   /**
    * f0 -> "{"
    * f1 -> Periodo()
    * f2 -> [ Giacenza() ";" ]
    * f3 -> "{"
    * f4 -> ( Azione() )+
    * f5 -> "}"
    * f6 -> "}"
    */
   public void visit(DescrizionePeriodo n);

   /**
    * f0 -> "DA"
    * f1 -> Data()
    * f2 -> "A"
    * f3 -> Data()
    * f4 -> ";"
    */
   public void visit(Periodo n);

   /**
    * f0 -> <NUM>
    * f1 -> "-"
    * f2 -> <MESE>
    * f3 -> "-"
    * f4 -> <NUM>
    */
   public void visit(Data n);

   /**
    * f0 -> "GIACENZA INIZIALE:"
    * f1 -> Residuo()
    * f2 -> ( "," Residuo() )*
    */
   public void visit(Giacenza n);

   /**
    * f0 -> Prodotto()
    * f1 -> "QUANTITA"
    * f2 -> <NUM>
    */
   public void visit(Residuo n);

   /**
    * f0 -> "MARCA"
    * f1 -> NomeComposto()
    * f2 -> "MODELLO"
    * f3 -> NomeComposto()
    */
   public void visit(Prodotto n);

   /**
    * f0 -> ( Movimento() | Trasformazione() )
    * f1 -> ";"
    */
   public void visit(Azione n);

   /**
    * f0 -> <MOVIMENTO>
    * f1 -> ":"
    * f2 -> ( Residuo() )+
    */
   public void visit(Movimento n);

   /**
    * f0 -> "TRASFORMAZIONE:"
    * f1 -> Materia()
    * f2 -> ( "+" Materia() )*
    * f3 -> "="
    * f4 -> Materia()
    * f5 -> ( "+" Materia() )*
    */
   public void visit(Trasformazione n);

   /**
    * f0 -> "("
    * f1 -> <NUM>
    * f2 -> Prodotto()
    * f3 -> ")"
    */
   public void visit(Materia n);

   /**
    * f0 -> <NOME>
    * f1 -> ( <NOME> )*
    */
   public void visit(NomeComposto n);

}

