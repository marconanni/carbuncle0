//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> Giocatore()
 * f1 -> ","
 * f2 -> Giocatore()
 * f3 -> ","
 * f4 -> Giocatore()
 * f5 -> ","
 * f6 -> Giocatore()
 * f7 -> ","
 * f8 -> Giocatore()
 * f9 -> ","
 * f10 -> Giocatore()
 * f11 -> ","
 * f12 -> Giocatore()
 * f13 -> ","
 * f14 -> Giocatore()
 * f15 -> ","
 * f16 -> Giocatore()
 */
public class LineUp implements Node {
   public Giocatore f0;
   public NodeToken f1;
   public Giocatore f2;
   public NodeToken f3;
   public Giocatore f4;
   public NodeToken f5;
   public Giocatore f6;
   public NodeToken f7;
   public Giocatore f8;
   public NodeToken f9;
   public Giocatore f10;
   public NodeToken f11;
   public Giocatore f12;
   public NodeToken f13;
   public Giocatore f14;
   public NodeToken f15;
   public Giocatore f16;

   public LineUp(Giocatore n0, NodeToken n1, Giocatore n2, NodeToken n3, Giocatore n4, NodeToken n5, Giocatore n6, NodeToken n7, Giocatore n8, NodeToken n9, Giocatore n10, NodeToken n11, Giocatore n12, NodeToken n13, Giocatore n14, NodeToken n15, Giocatore n16) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
      f8 = n8;
      f9 = n9;
      f10 = n10;
      f11 = n11;
      f12 = n12;
      f13 = n13;
      f14 = n14;
      f15 = n15;
      f16 = n16;
   }

   public LineUp(Giocatore n0, Giocatore n1, Giocatore n2, Giocatore n3, Giocatore n4, Giocatore n5, Giocatore n6, Giocatore n7, Giocatore n8) {
      f0 = n0;
      f1 = new NodeToken(",");
      f2 = n1;
      f3 = new NodeToken(",");
      f4 = n2;
      f5 = new NodeToken(",");
      f6 = n3;
      f7 = new NodeToken(",");
      f8 = n4;
      f9 = new NodeToken(",");
      f10 = n5;
      f11 = new NodeToken(",");
      f12 = n6;
      f13 = new NodeToken(",");
      f14 = n7;
      f15 = new NodeToken(",");
      f16 = n8;
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

